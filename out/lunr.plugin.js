// Generated by CoffeeScript 1.7.1
(function() {
  var lunrdoc,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  lunrdoc = require('./lunrdoc');

  module.exports = function(BasePlugin) {
    var LunrPlugin;
    return LunrPlugin = (function(_super) {
      __extends(LunrPlugin, _super);

      LunrPlugin.prototype.name = 'lunr';

      function LunrPlugin(config) {
        this.docpad = config.docpad;
        LunrPlugin.__super__.constructor.apply(this, arguments);
      }

      LunrPlugin.prototype.extendTemplateData = function(_arg) {
        var templateData;
        templateData = _arg.templateData;
        lunrdoc.init(this.docpad);
        templateData.getLunrSearchPage = function(index, placeholder) {
          return lunrdoc.getLunrSearchPage(index, placeholder);
        };
        return templateData.getLunrSearchBlock = function(searchPage, placeholder, submit) {
          return lunrdoc.getLunrSearchBlock(searchPage, placeholder, submit);
        };
      };

      LunrPlugin.prototype.writeAfter = function(opts) {
        var index, indexName, _docpad, _indexDocument, _ref;
        _docpad = this.docpad;
        _indexDocument = function(collection) {
          var indexCollection;
          indexCollection = _docpad.getCollection(collection);
          if (indexCollection) {
            indexCollection.forEach(function(document) {
              return lunrdoc.index(indexName, document);
            });
          }
        };
        if (this.config.indexes) {
          _ref = this.config.indexes;
          for (indexName in _ref) {
            index = _ref[indexName];
            if (Array.isArray(index.collection)) {
              index.collection.forEach(function(collection) {
                _indexDocument(collection);
              });
            } else {
              _indexDocument(index.collection);
            }
          }
          return lunrdoc.save();
        }
      };

      return LunrPlugin;

    })(BasePlugin);
  };

}).call(this);
